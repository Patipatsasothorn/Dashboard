@{
    ViewData["Title"] = "Home Page";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />

<style>
    /* Custom styles for sticky header */
    .table-container {
        max-height: 450px;
        overflow-y: auto;
        position: relative;
    }

        .table-container thead th {
            position: sticky;
            top: 0;
            z-index: 10;
            background-color: #212529 !important;
            border-bottom: 2px solid #dee2e6;
        }

    /* Filter input styles */
    .filter-input {
        width: 100%;
        padding: 4px 8px;
        border: 1px solid #ced4da;
        border-radius: 4px;
        font-size: 12px;
        margin-top: 5px;
    }

        .filter-input:focus {
            outline: none;
            border-color: #80bdff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

    /* Responsive table styling */
    .table-responsive {
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
</style>

<div class="container-fluid my-4">
    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="row mb-3 justify-content-center">
                <div class="col-auto">
                    <label for="startDate" class="form-label">วันที่เริ่ม</label>
                    <input type="date" id="startDate" class="form-control" />
                </div>
                <div class="col-auto">
                    <label for="endDate" class="form-label">วันที่สิ้นสุด</label>
                    <input type="date" id="endDate" class="form-control" />
                </div>
                <div class="col-auto align-self-end">
                    <button id="btnSearch" class="btn btn-primary">ค้นหา</button>
                </div>
            </div>

            <!-- Card กราฟ -->
            <div class="row">
                <!-- กราฟจำนวน user -->
                <div class="col-md-6">
                    <div class="card shadow mb-4">
                        <div class="card-header bg-primary text-white">
                            จำนวน User ที่ค้นหา
                        </div>
                        <div class="card-body">
                            <canvas id="userCountChart" height="125"></canvas>
                        </div>
                    </div>
                </div>

                <!-- กราฟ % user ใหม่ / เก่า -->
                <div class="col-md-6">
                    <div class="card shadow mb-4">
                        <div class="card-header bg-success text-white">
                            สัดส่วน User ใหม่และเก่า
                        </div>
                        <div class="card-body">
                            <canvas id="userNewOldChart" style="height: 200px; max-height: 200px;"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Card เลือกวันที่ + ตารางผลลัพธ์ -->
    <div class="card shadow mb-4">
        <div class="card-body">
            <!-- Search and Filter Controls -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <label for="globalSearch" class="form-label">ค้นหาทั่วไป</label>
                    <input type="text" id="globalSearch" class="form-control" placeholder="ค้นหาข้อมูลทั้งหมด...">
                </div>
                <div class="col-md-6">
                    <label class="form-label">จำนวนรายการที่แสดง</label>
                    <div class="d-flex align-items-center">
                        <span class="me-2">แสดง</span>
                        <select id="recordsPerPage" class="form-select" style="width: auto;">
                            <option value="10">10</option>
                            <option value="25" selected>25</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                            <option value="-1">ทั้งหมด</option>
                        </select>
                        <span class="ms-2">รายการ</span>
                    </div>
                </div>
            </div>

            <div class="table-responsive table-container">
                <table class="table table-bordered table-striped" id="resultTable">
                    <thead class="table-dark">
                        <tr>
                            <th>
                                Id
                                <input type="text" class="filter-input" data-column="0" placeholder="ค้นหา Id...">
                            </th>
                            <th style="display:none">Password</th>
                            <th>
                                Phone Number
                                <input type="text" class="filter-input" data-column="2" placeholder="ค้นหาเบอร์โทร...">
                            </th>
                            <th>
                                Bank Provider
                                <input type="text" class="filter-input" data-column="3" placeholder="ค้นหาธนาคาร...">
                            </th>
                            <th>
                                Bank Account Number
                                <input type="text" class="filter-input" data-column="4" placeholder="ค้นหาเลขบัญชี...">
                            </th>
                            <th>
                                Created At
                                <input type="text" class="filter-input" data-column="5" placeholder="ค้นหาวันที่...">
                            </th>
                            <th>
                                Wallet
                                <input type="text" class="filter-input" data-column="6" placeholder="ค้นหายอดเงิน...">
                            </th>
                            <th>
                                Total Win
                                <input type="text" class="filter-input" data-column="7" placeholder="ค้นหายอดชนะ...">
                            </th>
                            <th>
                                Last Login
                                <input type="text" class="filter-input" data-column="8" placeholder="ค้นหาล็อกอิน...">
                            </th>
                            <th>
                                Rate
                                <input type="text" class="filter-input" data-column="9" placeholder="ค้นหา Rate...">
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr><td colspan="10" class="text-center">กรุณาเลือกวันที่และกดค้นหา</td></tr>
                    </tbody>
                </table>
            </div>

            <!-- Pagination Info -->
            <div class="row mt-3">
                <div class="col-md-6">
                    <div id="tableInfo" class="text-muted"></div>
                </div>
                <div class="col-md-6">
                    <nav aria-label="Table pagination">
                        <ul class="pagination pagination-sm justify-content-end" id="tablePagination">
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        $(document).ready(function () {
            var userCountChart, userNewOldChart;
            var tableData = [];
            var filteredData = [];
            var currentPage = 1;
            var recordsPerPage = 25;

            function createUserCountChart(count) {
                if (userCountChart) userCountChart.destroy();

                const ctx = document.getElementById('userCountChart').getContext('2d');
                userCountChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: ['User ทั้งหมด'],
                        datasets: [{
                            label: 'จำนวน User',
                            data: [count],
                            backgroundColor: 'rgba(54, 162, 235, 0.7)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: { beginAtZero: true, precision: 0 }
                        }
                    }
                });
            }

            function createUserNewOldChart(newCount, oldCount) {
                if (userNewOldChart) userNewOldChart.destroy();

                const ctx = document.getElementById('userNewOldChart').getContext('2d');
                userNewOldChart = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        labels: ['User ใหม่ (<= 7 วัน)', 'User เก่า (> 7 วัน)'],
                        datasets: [{
                            label: 'User ใหม่ / เก่า',
                            data: [newCount, oldCount],
                            backgroundColor: [
                                'rgba(75, 192, 192, 0.7)',
                                'rgba(255, 159, 64, 0.7)'
                            ],
                            borderColor: [
                                'rgba(75, 192, 192, 1)',
                                'rgba(255, 159, 64, 1)'
                            ],
                            borderWidth: 1
                        }]
                    }
                });
            }

            function filterTable() {
                var globalSearch = $("#globalSearch").val().toLowerCase();
                var columnFilters = {};

                // Get all column filters
                $(".filter-input").each(function() {
                    var column = $(this).data('column');
                    var value = $(this).val().toLowerCase();
                    if (value) {
                        columnFilters[column] = value;
                    }
                });

                filteredData = tableData.filter(function(row) {
                    // Global search
                    if (globalSearch) {
                        var matchGlobal = false;
                        for (var i = 0; i < row.length; i++) {
                            if (i === 1) continue; // Skip password column
                            if (row[i].toString().toLowerCase().includes(globalSearch)) {
                                matchGlobal = true;
                                break;
                            }
                        }
                        if (!matchGlobal) return false;
                    }

                    // Column filters
                    for (var column in columnFilters) {
                        var filterValue = columnFilters[column];
                        var cellValue = row[column].toString().toLowerCase();
                        if (!cellValue.includes(filterValue)) {
                            return false;
                        }
                    }

                    return true;
                });

                currentPage = 1;
                displayTable();
            }

            function displayTable() {
                var tbody = $("#resultTable tbody");
                tbody.empty();

                if (filteredData.length === 0) {
                    tbody.append('<tr><td colspan="10" class="text-center">ไม่พบข้อมูล</td></tr>');
                    updatePagination();
                    return;
                }

                var startIndex = recordsPerPage === -1 ? 0 : (currentPage - 1) * recordsPerPage;
                var endIndex = recordsPerPage === -1 ? filteredData.length : startIndex + recordsPerPage;
                var displayData = filteredData.slice(startIndex, endIndex);

                displayData.forEach(function(row) {
                    tbody.append('<tr>' +
                        '<td>' + row[0] + '</td>' +
                        '<td style="display:none">' + row[1] + '</td>' +
                        '<td>' + row[2] + '</td>' +
                        '<td>' + row[3] + '</td>' +
                        '<td>' + row[4] + '</td>' +
                        '<td>' + row[5] + '</td>' +
                        '<td>' + row[6] + '</td>' +
                        '<td>' + row[7] + '</td>' +
                        '<td>' + row[8] + '</td>' +
                        '<td>' + row[9] + '</td>' +
                        '</tr>');
                });

                updatePagination();
            }

            function updatePagination() {
                var totalRecords = filteredData.length;
                var totalPages = recordsPerPage === -1 ? 1 : Math.ceil(totalRecords / recordsPerPage);

                // Update info
                var startRecord = totalRecords === 0 ? 0 : (recordsPerPage === -1 ? 1 : (currentPage - 1) * recordsPerPage + 1);
                var endRecord = recordsPerPage === -1 ? totalRecords : Math.min(currentPage * recordsPerPage, totalRecords);

                $("#tableInfo").text(`แสดง ${startRecord} ถึง ${endRecord} จาก ${totalRecords} รายการ`);

                // Update pagination
                var pagination = $("#tablePagination");
                pagination.empty();

                if (totalPages <= 1) return;

                // Previous button
                pagination.append(`
                    <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                        <a class="page-link" href="#" data-page="${currentPage - 1}">ก่อนหน้า</a>
                    </li>
                `);

                // Page numbers
                var startPage = Math.max(1, currentPage - 2);
                var endPage = Math.min(totalPages, currentPage + 2);

                if (startPage > 1) {
                    pagination.append(`<li class="page-item"><a class="page-link" href="#" data-page="1">1</a></li>`);
                    if (startPage > 2) {
                        pagination.append(`<li class="page-item disabled"><span class="page-link">...</span></li>`);
                    }
                }

                for (var i = startPage; i <= endPage; i++) {
                    pagination.append(`
                        <li class="page-item ${i === currentPage ? 'active' : ''}">
                            <a class="page-link" href="#" data-page="${i}">${i}</a>
                        </li>
                    `);
                }

                if (endPage < totalPages) {
                    if (endPage < totalPages - 1) {
                        pagination.append(`<li class="page-item disabled"><span class="page-link">...</span></li>`);
                    }
                    pagination.append(`<li class="page-item"><a class="page-link" href="#" data-page="${totalPages}">${totalPages}</a></li>`);
                }

                // Next button
                pagination.append(`
                    <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                        <a class="page-link" href="#" data-page="${currentPage + 1}">ถัดไป</a>
                    </li>
                `);
            }

            // Event handlers
            $("#globalSearch").on('input', function() {
                filterTable();
            });

            $(".filter-input").on('input', function() {
                filterTable();
            });

            $("#recordsPerPage").change(function() {
                recordsPerPage = parseInt($(this).val());
                currentPage = 1;
                displayTable();
            });

            $(document).on('click', '.page-link', function(e) {
                e.preventDefault();
                var page = parseInt($(this).data('page'));
                if (page && page !== currentPage) {
                    currentPage = page;
                    displayTable();
                }
            });

            $("#btnSearch").click(function () {
                var startDate = $("#startDate").val();
                var endDate = $("#endDate").val();

                if (!startDate || !endDate) {
                    alert("กรุณาเลือกวันที่เริ่มและวันที่สิ้นสุด");
                    return;
                }

                var createdate = startDate + "|" + endDate;

                $.ajax({
                    url: '@Url.Action("User")',
                    type: 'GET',
                    data: { Createdate: createdate },
                    success: function (data) {
                        if (data.length === 0) {
                            tableData = [];
                            filteredData = [];
                            displayTable();
                            createUserCountChart(0);
                            createUserNewOldChart(0, 0);
                            return;
                        }

                        // Prepare table data
                        tableData = data.map(function(user) {
                            var last_login = user.last_login ? new Date(user.last_login).toLocaleString() : "-";
                            return [
                                user.id,
                                user.password,
                                user.phoneNumber || '',
                                user.bankProvider || '',
                                user.bankAccountNumber || '',
                                new Date(user.created_at).toLocaleString(),
                                parseFloat(user.wallet).toFixed(2),
                                parseFloat(user.total_win).toFixed(2),
                                last_login,
                                parseFloat(user.rate).toFixed(2)
                            ];
                        });

                        // Clear filters and display
                        $("#globalSearch").val('');
                        $(".filter-input").val('');
                        filteredData = [...tableData];
                        currentPage = 1;
                        displayTable();

                        // คำนวณกราฟ
                        const totalUsers = data.length;
                        const now = new Date();
                        let newUsersCount = data.filter(u => {
                            var createdDate = new Date(u.created_at);
                            var diffDays = (now - createdDate) / (1000 * 60 * 60 * 24);
                            return diffDays <= 7;
                        }).length;

                        let oldUsersCount = totalUsers - newUsersCount;

                        createUserCountChart(totalUsers);
                        createUserNewOldChart(newUsersCount, oldUsersCount);
                    },
                    error: function () {
                        alert("เกิดข้อผิดพลาดในการโหลดข้อมูล");
                    }
                });
            });
        });
    </script>
}